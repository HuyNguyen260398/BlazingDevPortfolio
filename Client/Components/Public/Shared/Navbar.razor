<nav class="navbar nav-underline navbar-expand-lg d-flex flex-wrap navbar-light shadow-no-hover justify-content-between align-items-center pb-lg-3">
    <a href="/" class="navbar-brand md-f-size-1-5 text-dark ps-2 m-0 mx-lg-5 fw-bold">
        Huy Nguyen
        <span class="text-dark fw-normal"> &#8211; .NET Developer</span>
    </a>
    <button class="navbar-toggler mx-1" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
                <a class="nav-link mx-5 @(IsPageActive(HomePageUri) ? "active" : "")" href="@HomePageUri">
                    Home
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link mx-5 @(IsPageActive(SkillsPageUri) ? "active" : "")" href="@SkillsPageUri">
                    Skills
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link mx-5 @(IsPageActive(PortfolioPageUri) ? "active" : "")" href="@PortfolioPageUri">
                    Portfolio
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link mx-5 @(IsPageActive(BlogPageUri) ? "active" : "")" href="@BlogPageUri">
                    Blog
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link mx-5 @(IsPageActive(AboutPageUri) ? "active" : "")" href="@AboutPageUri">
                    About
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link mx-5 @(IsPageActive(ContactPageUri) ? "active" : "")" href="@ContactPageUri">
                    Contact
                </a>
            </li>
        </ul>
    </div>
</nav>

@code {
    [Inject] 
    public NavigationManager NavManager { get; set; }

    private const string HomePageUri = "/";
    private const string SkillsPageUri = "/skills";
    private const string PortfolioPageUri = "/portforlio";
    private const string BlogPageUri = "/blog";
    private const string AboutPageUri = "/about";
    private const string ContactPageUri = "/contact";

    private bool IsPageActive(string pageToCheckUri)
    {
        // Skip 3 to remove https://domainname/
        string[] currentUriSplitBetweenSlashes = NavManager.Uri.Split('/').Skip(3).ToArray();

        if (pageToCheckUri == HomePageUri)
        {
            if (currentUriSplitBetweenSlashes.Last().Length == 0)
                return true;
        }
        else
        {
            string[] pageToCheckUriSplitBetweenSlashes = pageToCheckUri.Split('/').Skip(1).ToArray();

            foreach (string currentUriPart in currentUriSplitBetweenSlashes)
            {
                foreach (string pageToCheckUriPart in pageToCheckUriSplitBetweenSlashes)
                {
                    if (pageToCheckUriPart == currentUriPart)
                        return true;
                }
            }
        }

        // If the code gets here, pageToCheckUri is not an active page, so return false
        return false;
    }
}
