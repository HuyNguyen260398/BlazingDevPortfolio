@page "/admin/categories"

@implements IDisposable
@inject InMemoryDatabaseCache InMemDb
@inject HttpClient HttpClient

<main class="admin-area-main">

    <Sidebar />

    <div class="admin-area-content container-fluid bg-white">
        <div class="row g-0">
            <div class="col">
                <h1>Categories</h1>
                <br />
                <br />
                <br />

                @if (InMemDb.Categories == null || _attemptDeleteCategory)
                {
                    <LoadingDot />
                }
                else
                {
                    <a href="/admin/categories/create" class="btn btn-success shadow me-5 md-f-size-1-5">
                        <i class="fas fa-plus"></i> Create Category
                    </a>
                    <button @onclick="() => InMemDb.GetCategoriesFromDatabaseAndCache(true)" class="btn btn-primary shadow md-f-size-1-5">
                        <i class="fas fa-sync"></i> Refresh Data
                    </button>
                    <br />
                    <br />
                    <br />

                    @if (InMemDb.Categories.Count < 1)
                    {
                        <h1>No category found! Please create one.</h1>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered table-sm">
                                <thead>
                                    <tr>
                                        <th scope="col">Name</th>
                                        <th scope="col">Thumbnail</th>
                                        <th scope="col">Description</th>
                                        <th scope="col">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var category in InMemDb.Categories)
                                    {
                                        <tr>
                                            <th class="w-15" scope="row">
                                                <p>@category.Name</p>
                                            </th>
                                            <td class="w-35">
                                                <img src="@($"{ApiEndpoints.ServerBaseUrl}/{category.ThumbnailImagePath}")" class="admin-index-thumbnail-image" />
                                            </td>
                                            <td class="w-15">
                                                <p>@category.Description</p>
                                            </td>
                                            <td class="w-15">
                                                <div class="d-flex flex-column">
                                                    <a href="/admin/categories/update/@category.CategoryId" class="btn btn-update shadow md-f-size-1-5">
                                                        <i class="fas fa-edit"></i> Update
                                                    </a>
                                                    <br />
                                                    <button @onclick="(() => DeleteCategory(category))" class="btn btn-danger shadow md-f-size-1-5">
                                                        <i class="fas fa-trash"></i> Delete
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                }

                <div class="position-fixed bottom-0 end-5 z-index-5">
                    
                    @if (_successDeleteCategory)
                    {
                        <Toast IsError="false" 
                               ToastTitle="Delete success!"
                               ToastBody="The category has been removed!"
                               ParentMethodToCallOnClose="() => _successDeleteCategory = false" />
                    }

                    @if (_unsuccessDeleteCategory)
                    {
                        <Toast IsError="true" 
                               ToastTitle="Delete failed!"
                               ToastBody="@_reasonUnsuccessDeleteCategory"
                               ParentMethodToCallOnClose="() => _unsuccessDeleteCategory = false" />
                    }

                </div>

            </div>
        </div>
    </div>
</main>

@code
{
    private bool _attemptDeleteCategory = false;
    private bool _successDeleteCategory = false;
    private bool _unsuccessDeleteCategory = false;
    private string _reasonUnsuccessDeleteCategory = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        InMemDb.OnCategoriesDataChanged += StateHasChanged;

        if (InMemDb.Categories == null)
        {
            await InMemDb.GetCategoriesFromDatabaseAndCache(true);
        }
    }

    public void Dispose() => InMemDb.OnCategoriesDataChanged -= StateHasChanged;

    private async void DeleteCategory(Category categoryToDelete)
    {
        if (categoryToDelete.Posts != null && categoryToDelete.Posts.Count > 0)
        {
            _reasonUnsuccessDeleteCategory = "Relevant posts in category must be deleted first!";
            _unsuccessDeleteCategory = true;
        }
        else
        {
            _attemptDeleteCategory = true;
            HttpResponseMessage response = await HttpClient.DeleteAsync($"{ApiEndpoints.s_categories}/{categoryToDelete.CategoryId}");

            if (response.StatusCode == HttpStatusCode.NoContent)
            {
                if (InMemDb.Categories.Remove(categoryToDelete))
                {
                    _successDeleteCategory = true;
                }
                else
                {
                    _reasonUnsuccessDeleteCategory = "Error with InMemDb!";
                    _unsuccessDeleteCategory = true;
                }
            }
            else
            {
                _reasonUnsuccessDeleteCategory = $"Error with api endpoint: {response.StatusCode}.";
                _unsuccessDeleteCategory = true;
            }
        }
        _attemptDeleteCategory = false;
        StateHasChanged();
    }
}